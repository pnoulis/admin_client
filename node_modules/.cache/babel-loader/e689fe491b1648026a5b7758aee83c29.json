{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useReducer, useContext } from \"react\";\nimport { reduceFields, reduceFieldErrors } from \"lib/input\";\n\nconst ACTIONS = {\n  setErrors: fieldErrors => {\n    return {\n      type: \"SET_ERRORS\",\n      fieldErrors\n    };\n  },\n  setInput: (name, value) => {\n    return {\n      type: \"SET_INPUT\",\n      name,\n      value\n    };\n  },\n  toggle: operation => {\n    return {\n      type: \"TOGGLE\",\n      operation\n    };\n  },\n  edit: toggle => {\n    return {\n      type: \"EDIT\",\n      toggle\n    };\n  },\n  refreshForm: (initialState, cancel) => {\n    return {\n      type: \"REFRESH_FORM\",\n      initialState,\n      cancel\n    };\n  },\n  updateForm: () => {\n    return {\n      type: \"UPDATE_FORM\"\n    };\n  }\n},\n      REDUCER = (state, action) => {\n  switch (action.type) {\n    case \"SET_ERRORS\":\n      return { ...state,\n        fieldErrors: action.fieldErrors,\n        edit: true\n      };\n\n    case \"SET_INPUT\":\n      return { ...state,\n        fields: reduceFields(state.fields, action.name, action.value),\n        fieldErrors: reduceFieldErrors(state.fieldErrors, action.name, action.value)\n      };\n\n    case \"TOGGLE\":\n      return { ...state,\n        toggled: action.operation\n      };\n\n    case \"EDIT\":\n      return { ...state,\n        toggled: action.toggle ? \"edit\" : false,\n        edit: action.toggle\n      };\n\n    case \"REFRESH_FORM\":\n      return { ...action.initialState,\n        toggled: action.cancel || false\n      };\n\n    case \"UPDATE_FORM\":\n    default:\n      return state;\n  }\n},\n      useForm = initialState => {\n  _s();\n\n  const [state, dispatch] = useReducer(REDUCER, initialState),\n        proxy = (action, ...payload) => {\n    if (action !== \"toggle\") return dispatch(ACTIONS[action](...payload));\n    if (payload[0] === \"edit\") return dispatch(ACTIONS.edit(true));\n    if (payload[0] === \"cancel\") return dispatch(ACTIONS.refreshForm(initialState, \"cancel\"));\n    dispatch(ACTIONS[action](...payload));\n  };\n\n  return {\n    form: state,\n    setForm: proxy\n  };\n},\n      formContext = /*#__PURE__*/React.createContext({\n  form: {},\n  setForm: () => {}\n}),\n      useFormContext = () => {\n  _s2();\n\n  return useContext(formContext);\n},\n      FORM_STORE = {\n  formContext,\n  useFormContext,\n  useForm\n};\n\n_s2(useFormContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_s(useForm, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\nexport { FORM_STORE };","map":{"version":3,"sources":["/home/pavlos/Office/projects/new/admin-client/src/lib/stores/forms.js"],"names":["React","useReducer","useContext","reduceFields","reduceFieldErrors","ACTIONS","setErrors","fieldErrors","type","setInput","name","value","toggle","operation","edit","refreshForm","initialState","cancel","updateForm","REDUCER","state","action","fields","toggled","useForm","dispatch","proxy","payload","form","setForm","formContext","createContext","useFormContext","FORM_STORE"],"mappings":"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","sourcesContent":["import React, {useReducer, useContext} from \"react\";\nimport {reduceFields, reduceFieldErrors} from \"lib/input\";\n\nconst\nACTIONS = {\n  setErrors: (fieldErrors) => {return {type: \"SET_ERRORS\", fieldErrors};},\n  setInput: (name, value) => {return {type: \"SET_INPUT\", name, value};},\n  toggle: (operation) => {return {type: \"TOGGLE\", operation};},\n  edit: (toggle) => {return {type: \"EDIT\", toggle};},\n  refreshForm: (initialState, cancel) => {return {type: \"REFRESH_FORM\", initialState, cancel};},\n  updateForm: () => {return {type: \"UPDATE_FORM\"};},\n},\nREDUCER = (state, action) => {\n  switch (action.type) {\n  case \"SET_ERRORS\":\n    return {...state, fieldErrors: action.fieldErrors, edit: true};\n  case \"SET_INPUT\":\n    return {\n      ...state,\n      fields: reduceFields(state.fields, action.name, action.value),\n      fieldErrors: reduceFieldErrors(state.fieldErrors, action.name, action.value),\n    };\n  case \"TOGGLE\":\n    return {...state, toggled: action.operation};\n  case \"EDIT\":\n    return {...state, toggled: action.toggle ? \"edit\" : false, edit: action.toggle};\n  case \"REFRESH_FORM\":\n    return {...action.initialState, toggled: action.cancel || false};\n  case \"UPDATE_FORM\":\n  default:\n    return state;\n  }\n},\nuseForm = (initialState) => {\n  const\n  [state, dispatch] = useReducer(REDUCER, initialState),\n  proxy = (action, ...payload) => {\n    if (action !== \"toggle\") return dispatch(ACTIONS[action](...payload));\n    if (payload[0] === \"edit\") return dispatch(ACTIONS.edit(true));\n    if (payload[0] === \"cancel\") return dispatch(ACTIONS.refreshForm(initialState, \"cancel\"));\n    dispatch(ACTIONS[action](...payload));\n  };\n\n  return {form: state, setForm: proxy};\n},\nformContext = React.createContext({\n  form: {},\n  setForm: () => {},\n}),\nuseFormContext = () => useContext(formContext),\nFORM_STORE = {\n  formContext,\n  useFormContext,\n  useForm,\n};\nexport {FORM_STORE};\n"]},"metadata":{},"sourceType":"module"}