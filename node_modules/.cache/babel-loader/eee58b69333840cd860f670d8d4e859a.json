{"ast":null,"code":"var _jsxFileName = \"/home/pavlos/Office/projects/new/admin-client/src/components/Fields/TextFields.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// own - utilities\nimport { FORM_STORE } from \"lib/stores\";\nimport { FORM_UTILS } from \"lib/utils\";\nimport { useStyle, useFocus } from \"lib/hooks\"; // styles\n\nimport style from \"./styles/textField_0.module.scss\";\nimport style1 from \"./styles/textField_1.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useFormContext\n} = FORM_STORE,\n      {\n  usePassword,\n  confirmPassword,\n  formStyleReducer\n} = FORM_UTILS;\nexport function TextField_0({\n  type,\n  clientName,\n  name,\n  required\n}) {\n  _s();\n\n  const {\n    fields,\n    edit,\n    fieldErrors,\n    setForm\n  } = useFormContext(),\n        {\n    reveal,\n    password\n  } = usePassword(type, style.password),\n        {\n    focused,\n    bindFocus\n  } = useFocus(),\n        setStyle = useStyle(style, {\n    focused,\n    input: fields[name],\n    error: name === \"confirmPassword\" ? confirmPassword(fields[name], fields.password) : fieldErrors[name]\n  }, formStyleReducer);\n\n  function handleInput(e) {\n    e.preventDefault();\n    if (!edit) return null;\n    setForm(\"setInput\", name, e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.textField,\n    ...bindFocus,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: setStyle([\"focused\", \"valid\", \"invalid\"], style.label),\n      htmlFor: name,\n      children: [clientName || name.split(/(?=[A-Z])/).map(s => s.toLowerCase()).join(' '), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: style.requiredStar,\n        children: required && \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type === \"password\" && reveal ? \"text\" : type || \"text\",\n      id: name,\n      value: fields[name],\n      onChange: handleInput,\n      autoComplete: \"off\",\n      className: setStyle([\"focused\", \"valid\", \"invalid\", \"customStyle\"], style.input)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), password, /*#__PURE__*/_jsxDEV(\"span\", {\n      className: setStyle([\"focused\", \"valid\", \"invalid\"], style.optional),\n      children: required ? \"\" : \"optional\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: style.errorMessage,\n      children: fieldErrors[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TextField_0, \"D9f2l+3MUNU2vJLUEFBcOZ3VMDQ=\", false, function () {\n  return [useFormContext, usePassword, useFocus, useStyle];\n});\n\n_c = TextField_0;\n;\nexport function TextField_1({\n  type,\n  clientName,\n  name,\n  disabled\n}) {\n  _s2();\n\n  const {\n    fields,\n    edit,\n    fieldErrors,\n    setForm\n  } = useFormContext(),\n        {\n    reveal,\n    password\n  } = usePassword(type, style1.password),\n        {\n    focused,\n    bindFocus\n  } = useFocus(),\n        setStyle = useStyle(style1, {\n    focused,\n    edit,\n    input: fields[name],\n    error: fieldErrors[name]\n  }, formStyleReducer);\n\n  function handleInput(e) {\n    e.preventDefault();\n    if (!edit) return null;\n    setForm(\"setInput\", name, e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style1.textField,\n    ...bindFocus,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: setStyle([\"focused\", \"valid\", \"invalid\"], style1.label),\n      htmlFor: name,\n      children: clientName || name.split(/(?=[A-Z])/).map(s => s.toLowerCase()).join(' ') + \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type === \"password\" && reveal ? \"text\" : type || \"text\",\n      id: name,\n      value: fields[name],\n      onChange: handleInput,\n      autoComplete: \"off\",\n      disabled: disabled,\n      className: setStyle([\"focused\", \"valid\", \"invalid\", \"edit\"], type === \"password\" ? style1.inputPassword : style1.input)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), edit && password, /*#__PURE__*/_jsxDEV(\"span\", {\n      className: setStyle([\"error\"], style1.errorMessage),\n      children: fieldErrors[name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(TextField_1, \"D9f2l+3MUNU2vJLUEFBcOZ3VMDQ=\", false, function () {\n  return [useFormContext, usePassword, useFocus, useStyle];\n});\n\n_c2 = TextField_1;\n;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextField_0\");\n$RefreshReg$(_c2, \"TextField_1\");","map":{"version":3,"sources":["/home/pavlos/Office/projects/new/admin-client/src/components/Fields/TextFields.jsx"],"names":["FORM_STORE","FORM_UTILS","useStyle","useFocus","style","style1","useFormContext","usePassword","confirmPassword","formStyleReducer","TextField_0","type","clientName","name","required","fields","edit","fieldErrors","setForm","reveal","password","focused","bindFocus","setStyle","input","error","handleInput","e","preventDefault","target","value","textField","label","split","map","s","toLowerCase","join","requiredStar","optional","errorMessage","TextField_1","disabled","inputPassword"],"mappings":"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","sourcesContent":["// own - utilities\nimport {FORM_STORE} from \"lib/stores\";\nimport {FORM_UTILS} from \"lib/utils\";\nimport {useStyle, useFocus} from \"lib/hooks\";\n// styles\nimport style from \"./styles/textField_0.module.scss\";\nimport style1 from \"./styles/textField_1.module.scss\";\n\nconst {useFormContext} = FORM_STORE,\n      {usePassword, confirmPassword, formStyleReducer} = FORM_UTILS;\n\nexport\nfunction TextField_0({type, clientName, name, required}) {\n  const {fields, edit, fieldErrors, setForm} = useFormContext(),\n        {reveal, password} = usePassword(type, style.password),\n        {focused, bindFocus} = useFocus(),\n        setStyle = useStyle(style,\n                            {focused, input: fields[name], error: (name === \"confirmPassword\") ? confirmPassword(fields[name], fields.password) : fieldErrors[name]},\n                    formStyleReducer);\n\n  function handleInput(e) {\n    e.preventDefault();\n    if (!edit) return null;\n    setForm(\"setInput\", name, e.target.value);\n  }\n\n  return (\n    <div className={style.textField} {...bindFocus}>\n      <label className={setStyle([\"focused\", \"valid\", \"invalid\",], style.label)} htmlFor={name}>\n        {clientName || name.split(/(?=[A-Z])/).map(s => s.toLowerCase()).join(' ')}\n        <span className={style.requiredStar}>{required && \"*\"}</span>\n      </label>\n      <input\n        type={(type === \"password\" && reveal) ? \"text\" : type || \"text\"}\n        id={name}\n        value={fields[name]}\n        onChange={handleInput}\n        autoComplete=\"off\"\n        className={setStyle([\"focused\", \"valid\", \"invalid\", \"customStyle\"], style.input)}\n      />\n      {password}\n      <span className={setStyle([\"focused\", \"valid\", \"invalid\"], style.optional)}>\n        {required ? \"\" : \"optional\"}\n      </span>\n      <span className={style.errorMessage}>\n        {fieldErrors[name]}\n      </span>\n    </div>\n  );\n};\n\nexport\nfunction TextField_1({type, clientName, name, disabled}) {\n  const {fields, edit, fieldErrors, setForm} = useFormContext(),\n        {reveal, password} = usePassword(type, style1.password),\n        {focused, bindFocus} = useFocus(),\n        setStyle = useStyle(style1,\n                            {focused, edit, input: fields[name], error: fieldErrors[name]},\n                            formStyleReducer);\n\n  function handleInput(e) {\n    e.preventDefault();\n    if (!edit) return null;\n    setForm(\"setInput\", name, e.target.value);\n  }\n\n  return (\n    <div className={style1.textField} {...bindFocus}>\n      <label className={setStyle([\"focused\", \"valid\", \"invalid\"], style1.label)} htmlFor={name}>\n        {clientName || name.split(/(?=[A-Z])/).map(s => s.toLowerCase()).join(' ') + \":\"}\n      </label>\n      <input\n        type={(type === \"password\" && reveal) ? \"text\" : type || \"text\"}\n        id={name}\n        value={fields[name]}\n        onChange={handleInput}\n        autoComplete=\"off\"\n        disabled={disabled}\n        className={setStyle([\"focused\", \"valid\", \"invalid\", \"edit\"], type === \"password\" ? style1.inputPassword : style1.input)}\n      />\n      {edit && password}\n      <span className={setStyle([\"error\"], style1.errorMessage)}>\n        {fieldErrors[name]}\n      </span>\n    </div>\n  );\n\n};\n"]},"metadata":{},"sourceType":"module"}