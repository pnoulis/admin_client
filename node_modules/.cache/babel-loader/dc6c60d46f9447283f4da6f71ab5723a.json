{"ast":null,"code":"var _jsxFileName = \"/home/pavlos/Office/projects/new/admin-client/src/lib/utils/forms.jsx\",\n    _s = $RefreshSig$();\n\nimport { validateInput } from \"lib/input\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isFormReady = fields => {\n  let fieldErrors = {};\n  Object.keys(fields).forEach(field => {\n    fieldErrors[field] = validateInput(field, fields[field]);\n  });\n\n  if (\"confirmPassword\" in fields && fields.confirmPassword !== fields.password) {\n    fieldErrors.confirmPassword = \"passwords do not match\";\n  }\n\n  return {\n    ready: !Object.values(fieldErrors).some(el => el),\n    fieldErrors\n  };\n},\n      confirmPassword = (confirm, password) => {\n  if (!confirm || !password) return false;\n  if (confirm !== password) return true;\n},\n      usePassword = (type, style) => {\n  _s();\n\n  if (type !== \"password\") return {\n    reveal: false,\n    password: null\n  };\n\n  const images = [\"/close_fill_minimal.svg\", \"/open_fill_black_minimal.svg\"],\n        [reveal, setReveal] = useState(false),\n        password = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style,\n    onClick: () => setReveal(!reveal),\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: reveal ? images[0] : images[1],\n      alt: \"show-hide-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n\n  return {\n    reveal,\n    password\n  };\n},\n      formStyleReducer = params => {\n  let config = {};\n  if (\"edit\" in params && !params.edit) return config;\n  if (params.password) return config.password = true;\n  if (params.edit) config.edit = true;\n  if (params.focused || params.input) config.focused = true;\n  if (params.input && params.error) config.invalid = true;\n  if (!config.invalid && params.input) config.valid = true;\n  if (params.error) config.error = true;\n  return config;\n},\n      ifErrors = fieldErrors => Object.values(fieldErrors).map(err => !!err && err);\n\n_s(usePassword, \"aQpGOjBATq/ElnUq/TLFAA9t1T4=\");\n\nexport const FORM_UTILS = {\n  ifErrors,\n  isFormReady,\n  confirmPassword,\n  usePassword,\n  formStyleReducer\n};","map":{"version":3,"sources":["/home/pavlos/Office/projects/new/admin-client/src/lib/utils/forms.jsx"],"names":["validateInput","useState","isFormReady","fields","fieldErrors","Object","keys","forEach","field","confirmPassword","password","ready","values","some","el","confirm","usePassword","type","style","reveal","images","setReveal","formStyleReducer","params","config","edit","focused","input","error","invalid","valid","ifErrors","map","err","FORM_UTILS"],"mappings":"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","sourcesContent":["import {validateInput} from \"lib/input\";\nimport {useState} from \"react\";\n\nconst\nisFormReady = (fields) => {\n  let fieldErrors = {};\n  Object.keys(fields).forEach(field => {\n    fieldErrors[field] = validateInput(field, fields[field]);\n  });\n\n\n  if (\"confirmPassword\" in fields &&\n      fields.confirmPassword !== fields.password) {\n    fieldErrors.confirmPassword = \"passwords do not match\";\n  }\n\n  return {ready: !Object.values(fieldErrors).some(el => el), fieldErrors};\n},\nconfirmPassword = (confirm, password) => {\n  if (!confirm || !password) return false;\n  if (confirm !== password) return true;\n},\nusePassword = (type, style) => {\n  if (type !== \"password\") return {reveal: false, password: null};\n\n  const\n  images = [\"/close_fill_minimal.svg\",\n            \"/open_fill_black_minimal.svg\"],\n  [reveal, setReveal] = useState(false),\n  password = (\n    <div className={style} onClick={() => setReveal(!reveal)}>\n      <img\n        src={reveal ? images[0] : images[1]}\n        alt=\"show-hide-icon\"\n      />\n    </div>\n  );\n\n  return {\n    reveal,\n    password,\n  };\n},\nformStyleReducer = (params) => {\n  let config = {};\n  if (\"edit\" in params && !params.edit) return config;\n  if (params.password) return config.password = true;\n  if (params.edit) config.edit = true;\n  if (params.focused || params.input) config.focused = true;\n  if (params.input && params.error) config.invalid = true;\n  if (!config.invalid && params.input) config.valid = true;\n  if (params.error) config.error = true;\n  return config;\n},\nifErrors = fieldErrors => Object.values(fieldErrors).map(err => !!err && err);\n\nexport const FORM_UTILS = {\n  ifErrors,\n  isFormReady,\n  confirmPassword,\n  usePassword,\n  formStyleReducer,\n};\n"]},"metadata":{},"sourceType":"module"}