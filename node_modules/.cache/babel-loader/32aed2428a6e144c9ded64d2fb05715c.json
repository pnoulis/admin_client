{"ast":null,"code":"import { weight } from \"lib/utils\";\n\nconst FIELDS = {\n  tags(fields, value) {\n    let copy = fields.tags.filter(tag => tag !== value);\n    if (!fields.tags.length) copy.push(value);\n    if (copy.length === fields.tags.length) copy.push(value);\n    return { ...fields,\n      tags: copy\n    };\n  },\n\n  img(fields, value) {\n    return { ...fields,\n      oldImg: !fields.oldImg ? fields.img : fields.oldImg,\n      img: value\n    };\n  },\n\n  stock(fields, value) {\n    return { ...fields,\n      tp: parseInt(value) * parseInt(fields.ppu) || 0,\n      stock: value,\n      inStock: parseInt(value) > 0 ? true : false,\n      _vstock: typeof fields._vstock === \"number\" ? fields._vstock : parseInt(fields.vstock),\n      vstock: typeof fields._vstock === \"number\" ? fields._vstock + parseInt(value) || 0 : parseInt(fields.vstock) + parseInt(value) || 0\n    };\n  },\n\n  ppu(fields, value) {\n    return { ...fields,\n      ppu: value,\n      tp: parseInt(value) * parseInt(fields.stock) || 0\n    };\n  },\n\n  mu(fields, value) {\n    return { ...fields,\n      mu: value,\n      wpu: fields.wpu ? weight(fields.wpu, value, fields.mu) : fields.wpu\n    };\n  },\n\n  wpu(fields, value) {\n    return { ...fields,\n      wpu: fields.mu ? weight(value, fields.mu) : value\n    };\n  }\n\n},\n      reduceFields = (fields, name, input) => !FIELDS[name] ? { ...fields,\n  [name]: input\n} : FIELDS[name](fields, input);\n\nexport { reduceFields };","map":{"version":3,"sources":["/home/pavlos/Office/projects/new/admin-client/src/lib/input/reduceFields.js"],"names":["weight","FIELDS","tags","fields","value","copy","filter","tag","length","push","img","oldImg","stock","tp","parseInt","ppu","inStock","_vstock","vstock","mu","wpu","reduceFields","name","input"],"mappings":"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","sourcesContent":["import {weight} from \"lib/utils\";\nconst\nFIELDS = {\n  tags(fields, value) {\n    let copy = fields.tags.filter(tag => tag !== value);\n    if (!fields.tags.length) copy.push(value);\n    if (copy.length === fields.tags.length) copy.push(value);\n    return {...fields, tags: copy};\n  },\n  img(fields, value) {\n    return {\n      ...fields,\n      oldImg: !fields.oldImg ? fields.img : fields.oldImg,\n      img: value,\n    };\n  },\n  stock(fields, value) {\n    return {\n      ...fields,\n      tp: parseInt(value) * parseInt(fields.ppu) || 0,\n      stock: value,\n      inStock: parseInt(value) > 0 ? true : false,\n      _vstock: (typeof fields._vstock === \"number\") ? fields._vstock :  parseInt(fields.vstock),\n      vstock: (typeof fields._vstock === \"number\") ? fields._vstock + parseInt(value) || 0 : parseInt(fields.vstock) + parseInt(value) || 0,\n    };\n  },\n  ppu(fields, value) {\n    return {\n      ...fields,\n      ppu: value,\n      tp: parseInt(value) * parseInt(fields.stock) || 0,\n    };\n  },\n  mu(fields, value) {\n    return {\n      ...fields,\n      mu: value,\n      wpu: fields.wpu ? weight(fields.wpu, value, fields.mu) : fields.wpu,\n    };\n  },\n  wpu(fields, value) {\n    return {\n      ...fields,\n      wpu: fields.mu ? weight(value, fields.mu) : value,\n    };\n  }\n},\nreduceFields = (fields, name, input) => !FIELDS[name] ? {...fields, [name]: input} : FIELDS[name](fields, input);\nexport {reduceFields};\n"]},"metadata":{},"sourceType":"module"}