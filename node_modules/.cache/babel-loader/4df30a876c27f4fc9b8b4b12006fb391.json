{"ast":null,"code":"var _jsxFileName = \"/home/pavlos/Office/projects/new/admin-client/src/components/Tables/FormRow.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { FORM_STORE } from \"lib/stores\";\nimport { FORM_UTILS } from \"lib/utils\";\nimport { useTableContext, Row, Cell, renderErrors } from \"./Table\";\nimport { NotBeingEdited, BeingEdited } from \"components/Fields\";\nimport toggleStyle from \"./toggles.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useForm,\n  formContext\n} = FORM_STORE;\nconst {\n  ifErrors\n} = FORM_UTILS;\nexport default function FormRow({\n  notify,\n  data,\n  edit\n}) {\n  _s();\n\n  const {\n    cellMap,\n    formSchema\n  } = useTableContext(),\n        {\n    form,\n    setForm\n  } = useForm({ ...formSchema,\n    fields: { ...formSchema.fields,\n      ...data\n    },\n    new: !data,\n    edit\n  });\n  useEffect(() => {\n    if (form.toggled) notify();\n  }, [form.toggled]);\n  return /*#__PURE__*/_jsxDEV(formContext.Provider, {\n    value: { ...form,\n      setForm\n    },\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [Object.keys(cellMap).map((h, i) => {\n        return /*#__PURE__*/_jsxDEV(Cell, {\n          children: typeof cellMap[h] === \"function\" ? cellMap[h]() : cellMap[h]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Cell, {\n        children: form.edit ? /*#__PURE__*/_jsxDEV(BeingEdited, {\n          style: toggleStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(NotBeingEdited, {\n          style: toggleStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 12\n        }, this)\n      }, Object.keys(form.fields).length, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), renderErrors(ifErrors(form.fieldErrors), Object.keys(cellMap).length)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormRow, \"sRUz8RuuIKvJG4UvfUXDt/YZJWY=\", false, function () {\n  return [useTableContext, useForm];\n});\n\n_c = FormRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormRow\");","map":{"version":3,"sources":["/home/pavlos/Office/projects/new/admin-client/src/components/Tables/FormRow.jsx"],"names":["useEffect","FORM_STORE","FORM_UTILS","useTableContext","Row","Cell","renderErrors","NotBeingEdited","BeingEdited","toggleStyle","useForm","formContext","ifErrors","FormRow","notify","data","edit","cellMap","formSchema","form","setForm","fields","new","toggled","Object","keys","map","h","i","length","fieldErrors"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AACA,SAAQC,UAAR,QAAyB,WAAzB;AACA,SAAQC,eAAR,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,YAApC,QAAuD,SAAvD;AACA,SAAQC,cAAR,EAAwBC,WAAxB,QAA0C,mBAA1C;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AACA,MAAM;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,IAAyBV,UAA/B;AACA,MAAM;AAACW,EAAAA;AAAD,IAAaV,UAAnB;AAGA,eAAe,SAASW,OAAT,CAAiB;AAACC,EAAAA,MAAD;AAASC,EAAAA,IAAT;AAAeC,EAAAA;AAAf,CAAjB,EAAuC;AAAA;;AACpD,QACA;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAwBf,eAAe,EADvC;AAAA,QAEA;AAACgB,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBV,OAAO,CACvB,EAAC,GAAGQ,UAAJ;AAAgBG,IAAAA,MAAM,EAAE,EAAC,GAAGH,UAAU,CAACG,MAAf;AAAuB,SAAGN;AAA1B,KAAxB;AACCO,IAAAA,GAAG,EAAE,CAACP,IADP;AACcC,IAAAA;AADd,GADuB,CAFzB;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,IAAI,CAACI,OAAT,EAAkBT,MAAM;AACzB,GAFQ,EAEN,CAACK,IAAI,CAACI,OAAN,CAFM,CAAT;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,EAAC,GAAGJ,IAAJ;AAAUC,MAAAA;AAAV,KAA7B;AAAA,4BACE,QAAC,GAAD;AAAA,iBACGI,MAAM,CAACC,IAAP,CAAYR,OAAZ,EAAqBS,GAArB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClC,4BACE,QAAC,IAAD;AAAA,oBACC,OAAOX,OAAO,CAACU,CAAD,CAAd,KAAsB,UAAtB,GACAV,OAAO,CAACU,CAAD,CAAP,EADA,GAEAV,OAAO,CAACU,CAAD;AAHR,WAAWC,CAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OARA,CADH,eAUE,QAAC,IAAD;AAAA,kBACGT,IAAI,CAACH,IAAL,gBAAY,QAAC,WAAD;AAAa,UAAA,KAAK,EAAEP;AAApB;AAAA;AAAA;AAAA;AAAA,gBAAZ,gBACA,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA;AAFH,SAAWe,MAAM,CAACC,IAAP,CAAYN,IAAI,CAACE,MAAjB,EAAyBQ,MAApC;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAgBGvB,YAAY,CAACM,QAAQ,CAACO,IAAI,CAACW,WAAN,CAAT,EAA6BN,MAAM,CAACC,IAAP,CAAYR,OAAZ,EAAqBY,MAAlD,CAhBf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAhCuBhB,O;UAEEV,e,EACNO,O;;;KAHIG,O","sourcesContent":["import {useEffect} from \"react\";\nimport {FORM_STORE} from \"lib/stores\";\nimport {FORM_UTILS} from \"lib/utils\";\nimport {useTableContext, Row, Cell, renderErrors} from \"./Table\";\nimport {NotBeingEdited, BeingEdited} from \"components/Fields\";\nimport toggleStyle from \"./toggles.module.scss\";\nconst {useForm, formContext} = FORM_STORE;\nconst {ifErrors} = FORM_UTILS;\n\n\nexport default function FormRow({notify, data, edit}) {\n  const\n  {cellMap, formSchema} = useTableContext(),\n  {form, setForm} = useForm(\n    {...formSchema, fields: {...formSchema.fields, ...data},\n     new: !data,  edit}\n  );\n\n  useEffect(() => {\n    if (form.toggled) notify();\n  }, [form.toggled]);\n\n  return (\n    <formContext.Provider value={{...form, setForm}}>\n      <Row>\n        {Object.keys(cellMap).map((h, i) => {\n          return (\n            <Cell key={i}>\n            {typeof cellMap[h] === \"function\" ?\n             cellMap[h]() :\n             cellMap[h]}\n            </Cell >\n          );\n        })}\n        <Cell key={Object.keys(form.fields).length}>\n          {form.edit ? <BeingEdited style={toggleStyle}/> :\n           <NotBeingEdited style={toggleStyle}/>}\n        </Cell>\n      </Row>\n      {renderErrors(ifErrors(form.fieldErrors), Object.keys(cellMap).length)}\n    </formContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}