{"ast":null,"code":"const FIELDS = {\n  tags(fields, value) {\n    let copy = fields.tags.filter(tag => tag !== value);\n    if (!fields.tags.length) copy.push(value);\n    if (copy.length === fields.tags.length) copy.push(value);\n    return { ...fields,\n      tags: copy\n    };\n  },\n\n  img(fields, value) {\n    return { ...fields,\n      oldImg: !fields.oldImg ? fields.img : fields.oldImg,\n      img: value\n    };\n  },\n\n  stock(fields, value) {\n    return { ...fields,\n      tp: parseInt(value) * parseInt(fields.ppu) || 0,\n      stock: value\n    };\n  },\n\n  ppu(fields, value) {\n    return { ...fields,\n      ppu: value,\n      tp: parseInt(value) * parseInt(fields.stock) || 0\n    };\n  }\n\n},\n      reduceFields = (fields, name, input) => !FIELDS[name] ? { ...fields,\n  [name]: input\n} : FIELDS[name](fields, input);\n\nexport { reduceFields };","map":{"version":3,"sources":["/home/pavlos/Office/projects/new/admin-client/src/lib/input/reduceFields.js"],"names":["FIELDS","tags","fields","value","copy","filter","tag","length","push","img","oldImg","stock","tp","parseInt","ppu","reduceFields","name","input"],"mappings":"AAAA,MACAA,MAAM,GAAG;AACPC,EAAAA,IAAI,CAACC,MAAD,EAASC,KAAT,EAAgB;AAClB,QAAIC,IAAI,GAAGF,MAAM,CAACD,IAAP,CAAYI,MAAZ,CAAmBC,GAAG,IAAIA,GAAG,KAAKH,KAAlC,CAAX;AACA,QAAI,CAACD,MAAM,CAACD,IAAP,CAAYM,MAAjB,EAAyBH,IAAI,CAACI,IAAL,CAAUL,KAAV;AACzB,QAAIC,IAAI,CAACG,MAAL,KAAgBL,MAAM,CAACD,IAAP,CAAYM,MAAhC,EAAwCH,IAAI,CAACI,IAAL,CAAUL,KAAV;AACxC,WAAO,EAAC,GAAGD,MAAJ;AAAYD,MAAAA,IAAI,EAAEG;AAAlB,KAAP;AACD,GANM;;AAOPK,EAAAA,GAAG,CAACP,MAAD,EAASC,KAAT,EAAgB;AACjB,WAAO,EACL,GAAGD,MADE;AAELQ,MAAAA,MAAM,EAAE,CAACR,MAAM,CAACQ,MAAR,GAAiBR,MAAM,CAACO,GAAxB,GAA8BP,MAAM,CAACQ,MAFxC;AAGLD,MAAAA,GAAG,EAAEN;AAHA,KAAP;AAKD,GAbM;;AAcPQ,EAAAA,KAAK,CAACT,MAAD,EAASC,KAAT,EAAgB;AACnB,WAAO,EACL,GAAGD,MADE;AAELU,MAAAA,EAAE,EAAEC,QAAQ,CAACV,KAAD,CAAR,GAAkBU,QAAQ,CAACX,MAAM,CAACY,GAAR,CAA1B,IAA0C,CAFzC;AAGLH,MAAAA,KAAK,EAAER;AAHF,KAAP;AAKD,GApBM;;AAqBPW,EAAAA,GAAG,CAACZ,MAAD,EAASC,KAAT,EAAgB;AACjB,WAAO,EACL,GAAGD,MADE;AAELY,MAAAA,GAAG,EAAEX,KAFA;AAGLS,MAAAA,EAAE,EAAEC,QAAQ,CAACV,KAAD,CAAR,GAAkBU,QAAQ,CAACX,MAAM,CAACS,KAAR,CAA1B,IAA4C;AAH3C,KAAP;AAKD;;AA3BM,CADT;AAAA,MA8BAI,YAAY,GAAG,CAACb,MAAD,EAASc,IAAT,EAAeC,KAAf,KAAyB,CAACjB,MAAM,CAACgB,IAAD,CAAP,GAAgB,EAAC,GAAGd,MAAJ;AAAY,GAACc,IAAD,GAAQC;AAApB,CAAhB,GAA6CjB,MAAM,CAACgB,IAAD,CAAN,CAAad,MAAb,EAAqBe,KAArB,CA9BrF;;AA+BA,SAAQF,YAAR","sourcesContent":["const\nFIELDS = {\n  tags(fields, value) {\n    let copy = fields.tags.filter(tag => tag !== value);\n    if (!fields.tags.length) copy.push(value);\n    if (copy.length === fields.tags.length) copy.push(value);\n    return {...fields, tags: copy};\n  },\n  img(fields, value) {\n    return {\n      ...fields,\n      oldImg: !fields.oldImg ? fields.img : fields.oldImg,\n      img: value,\n    };\n  },\n  stock(fields, value) {\n    return {\n      ...fields,\n      tp: parseInt(value) * parseInt(fields.ppu) || 0,\n      stock: value,\n    };\n  },\n  ppu(fields, value) {\n    return {\n      ...fields,\n      ppu: value,\n      tp: parseInt(value) * parseInt(fields.stock) || 0,\n    };\n  },\n},\nreduceFields = (fields, name, input) => !FIELDS[name] ? {...fields, [name]: input} : FIELDS[name](fields, input);\nexport {reduceFields};\n"]},"metadata":{},"sourceType":"module"}