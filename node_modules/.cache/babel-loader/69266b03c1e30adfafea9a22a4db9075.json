{"ast":null,"code":"const FIELDS = {\n  tags(fields, value) {\n    let copy = fields.tags.filter(tag => tag !== value);\n    if (!fields.tags.length) copy.push(value);\n    if (copy.length === fields.tags.length) copy.push(value);\n    return { ...fields,\n      tags: copy\n    };\n  },\n\n  img(fields, value) {\n    return { ...fields,\n      oldImg: !fields.oldImg ? fields.img : fields.oldImg,\n      img: value\n    };\n  },\n\n  stock(fields, value) {\n    console.log(fields.vstock + value);\n    return { ...fields,\n      tp: parseInt(value) * parseInt(fields.ppu) || 0,\n      vstock: parseInt(fields.vstock) + parseInt(value)\n    };\n  }\n\n},\n      reduceFields = (fields, name, input) => !FIELDS[name] ? { ...fields,\n  [name]: input\n} : FIELDS[name](fields, input);\n\nexport { reduceFields };","map":{"version":3,"sources":["/home/pavlos/Office/projects/new/admin-client/src/lib/input/reduceFields.js"],"names":["FIELDS","tags","fields","value","copy","filter","tag","length","push","img","oldImg","stock","console","log","vstock","tp","parseInt","ppu","reduceFields","name","input"],"mappings":"AAAA,MACAA,MAAM,GAAG;AACPC,EAAAA,IAAI,CAACC,MAAD,EAASC,KAAT,EAAgB;AAClB,QAAIC,IAAI,GAAGF,MAAM,CAACD,IAAP,CAAYI,MAAZ,CAAmBC,GAAG,IAAIA,GAAG,KAAKH,KAAlC,CAAX;AACA,QAAI,CAACD,MAAM,CAACD,IAAP,CAAYM,MAAjB,EAAyBH,IAAI,CAACI,IAAL,CAAUL,KAAV;AACzB,QAAIC,IAAI,CAACG,MAAL,KAAgBL,MAAM,CAACD,IAAP,CAAYM,MAAhC,EAAwCH,IAAI,CAACI,IAAL,CAAUL,KAAV;AACxC,WAAO,EAAC,GAAGD,MAAJ;AAAYD,MAAAA,IAAI,EAAEG;AAAlB,KAAP;AACD,GANM;;AAOPK,EAAAA,GAAG,CAACP,MAAD,EAASC,KAAT,EAAgB;AACjB,WAAO,EACL,GAAGD,MADE;AAELQ,MAAAA,MAAM,EAAE,CAACR,MAAM,CAACQ,MAAR,GAAiBR,MAAM,CAACO,GAAxB,GAA8BP,MAAM,CAACQ,MAFxC;AAGLD,MAAAA,GAAG,EAAEN;AAHA,KAAP;AAKD,GAbM;;AAcPQ,EAAAA,KAAK,CAACT,MAAD,EAASC,KAAT,EAAgB;AACnBS,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACY,MAAP,GAAgBX,KAA5B;AACA,WAAO,EACL,GAAGD,MADE;AAELa,MAAAA,EAAE,EAAEC,QAAQ,CAACb,KAAD,CAAR,GAAkBa,QAAQ,CAACd,MAAM,CAACe,GAAR,CAA1B,IAA0C,CAFzC;AAGLH,MAAAA,MAAM,EAAEE,QAAQ,CAACd,MAAM,CAACY,MAAR,CAAR,GAA0BE,QAAQ,CAACb,KAAD;AAHrC,KAAP;AAKD;;AArBM,CADT;AAAA,MAwBAe,YAAY,GAAG,CAAChB,MAAD,EAASiB,IAAT,EAAeC,KAAf,KAAyB,CAACpB,MAAM,CAACmB,IAAD,CAAP,GAAgB,EAAC,GAAGjB,MAAJ;AAAY,GAACiB,IAAD,GAAQC;AAApB,CAAhB,GAA6CpB,MAAM,CAACmB,IAAD,CAAN,CAAajB,MAAb,EAAqBkB,KAArB,CAxBrF;;AAyBA,SAAQF,YAAR","sourcesContent":["const\nFIELDS = {\n  tags(fields, value) {\n    let copy = fields.tags.filter(tag => tag !== value);\n    if (!fields.tags.length) copy.push(value);\n    if (copy.length === fields.tags.length) copy.push(value);\n    return {...fields, tags: copy};\n  },\n  img(fields, value) {\n    return {\n      ...fields,\n      oldImg: !fields.oldImg ? fields.img : fields.oldImg,\n      img: value,\n    };\n  },\n  stock(fields, value) {\n    console.log(fields.vstock + value);\n    return {\n      ...fields,\n      tp: parseInt(value) * parseInt(fields.ppu) || 0,\n      vstock: parseInt(fields.vstock) + parseInt(value),\n    };\n  },\n},\nreduceFields = (fields, name, input) => !FIELDS[name] ? {...fields, [name]: input} : FIELDS[name](fields, input);\nexport {reduceFields};\n"]},"metadata":{},"sourceType":"module"}