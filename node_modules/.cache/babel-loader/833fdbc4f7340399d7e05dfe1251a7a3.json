{"ast":null,"code":"var _jsxFileName = \"/home/pavlos/Office/projects/new/admin-client/src/components/Slider/Slider.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport S from \"./Styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SliderCard = S.SliderCard;\nexport { Slider, SliderCard };\n\nfunction Slider({\n  type,\n  children\n}) {\n  _s();\n\n  const container = useRef(null),\n        slider = useRef(null),\n        [selected, setSelected] = useState({}),\n        [dimensions, setDimensions] = useState({});\n  useEffect(() => {\n    if (typeof selected.id !== \"number\") container.current.scrollTop = 0;\n  }, [selected]);\n  useEffect(() => {\n    setDimensions(calculateDimensions(type, children.length, container, slider));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(S.Aside, {\n    ref: container,\n    height: dimensions.container,\n    children: /*#__PURE__*/_jsxDEV(S.Nav, {\n      ref: slider,\n      minHeight: dimensions.slider,\n      children: [children.map((c, i) => i === selected.id ? null : /*#__PURE__*/_jsxDEV(SliderNode, {\n        id: i,\n        setSelected: setSelected,\n        children: c\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)), typeof selected.id === \"number\" && /*#__PURE__*/_jsxDEV(SliderNode, {\n        id: selected.id,\n        setSelected: setSelected,\n        selected: true,\n        children: children[selected.id]\n      }, selected.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Slider, \"+np01/n7GkexD+6JnsCPQD3JVIQ=\");\n\n_c = Slider;\n\nfunction SliderNode({\n  id,\n  setSelected,\n  selected,\n  children\n}) {\n  _s2();\n\n  const node = useRef(null);\n  useEffect(() => {\n    selected && node.current.scrollIntoView();\n  }, [selected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: node,\n    onClick: () => selected ? setSelected({}) : setSelected({\n      id\n    }),\n    children: selected ? /*#__PURE__*/React.cloneElement(children, {\n      selected\n    }) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SliderNode, \"A62a+t8acnd/qE6b0a3681HeHAY=\");\n\n_c2 = SliderNode;\n\nfunction calculateDimensions(type, sliderChildren, container, slider) {\n  let containerXY = 0,\n      sliderXY = 0,\n      browserXY = 0,\n      diff = 0;\n  containerXY = type === \"vertical\" ? container.current.offsetHeight : container.current.offsetWidth;\n  sliderXY = type === \"vertical\" ? slider.current.offsetHeight : container.current.offsetWidth;\n  browserXY = type === \"vertical\" ? document.documentElement.clientHeight : document.documentElement.clientWidth;\n  diff = containerXY - sliderXY;\n  if (!diff) diff = sliderXY - browserXY; // diff ||= sliderXY - browserXY;\n\n  return {\n    container: browserXY - (browserXY - containerXY),\n    slider: containerXY * 2 - diff - Math.round(sliderXY / sliderChildren),\n    calculated: true\n  };\n}\n\nfunction useSlider(type, sliderChildren, container, slider) {\n  _s3();\n\n  const [dimensions, setDimensions] = useState({});\n  if (!container.current || !slider.current || dimensions.calculated) return dimensions;\n  let containerXY = 0,\n      sliderXY = 0,\n      browserXY = 0,\n      diff = 0;\n  containerXY = type === \"vertical\" ? container.current.offsetHeight : container.current.offsetWidth;\n  sliderXY = type === \"vertical\" ? slider.current.offsetHeight : container.current.offsetWidth;\n  browserXY = type === \"vertical\" ? document.documentElement.clientHeight : document.documentElement.clientWidth;\n  diff = containerXY - sliderXY;\n  if (!diff) diff = sliderXY - browserXY; // diff ||= sliderXY - browserXY;\n\n  setDimensions({\n    container: browserXY - (browserXY - containerXY),\n    slider: containerXY * 2 - diff - Math.round(sliderXY / sliderChildren),\n    calculated: true\n  });\n  return dimensions;\n}\n\n_s3(useSlider, \"2M4M6s3XzIvee12pXFui6Z/GYcs=\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Slider\");\n$RefreshReg$(_c2, \"SliderNode\");","map":{"version":3,"sources":["/home/pavlos/Office/projects/new/admin-client/src/components/Slider/Slider.jsx"],"names":["React","useState","useEffect","useRef","S","SliderCard","Slider","type","children","container","slider","selected","setSelected","dimensions","setDimensions","id","current","scrollTop","calculateDimensions","length","map","c","i","SliderNode","node","scrollIntoView","cloneElement","sliderChildren","containerXY","sliderXY","browserXY","diff","offsetHeight","offsetWidth","document","documentElement","clientHeight","clientWidth","Math","round","calculated","useSlider"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport S from \"./Styles\";\n\nconst SliderCard = S.SliderCard;\nexport {Slider, SliderCard};\n\nfunction Slider({type, children}) {\n  const\n  container = useRef(null),\n  slider = useRef(null),\n  [selected, setSelected] = useState({}),\n  [dimensions, setDimensions] = useState({});\n\n  useEffect(() => {\n    if (typeof selected.id !== \"number\") container.current.scrollTop = 0;\n  }, [selected]);\n\n  useEffect(() => {\n    setDimensions(calculateDimensions(type, children.length, container, slider));\n  }, []);\n\n  return (\n      <S.Aside ref={container} height={dimensions.container}>\n        <S.Nav ref={slider} minHeight={dimensions.slider}>\n          {\n            children.map((c, i) => (\n              i === selected.id ? null :\n                <SliderNode key={i} id={i} setSelected={setSelected}>\n                  {c}\n                </SliderNode>\n            ))\n          }\n          {\n            typeof selected.id === \"number\" &&\n              <SliderNode key={selected.id} id={selected.id} setSelected={setSelected} selected>\n                {children[selected.id]}\n              </SliderNode>\n          }\n        </S.Nav>\n      </S.Aside>\n  );\n}\n\nfunction SliderNode({id, setSelected, selected, children}) {\n  const node = useRef(null);\n\n  useEffect(() => {\n    selected && node.current.scrollIntoView();\n  }, [selected]);\n\n  return (\n    <div ref={node}\n         onClick={() => selected ? setSelected({}) : setSelected({id})}\n    >{selected ? React.cloneElement(children, {selected}) : children}\n    </div>\n  );\n}\nfunction calculateDimensions(type, sliderChildren, container, slider) {\n  let containerXY = 0, sliderXY = 0, browserXY = 0, diff = 0;\n\n  containerXY = type === \"vertical\" ? container.current.offsetHeight :\n    container.current.offsetWidth;\n\n  sliderXY = type === \"vertical\" ? slider.current.offsetHeight :\n    container.current.offsetWidth;\n\n  browserXY = type === \"vertical\" ? document.documentElement.clientHeight :\n    document.documentElement.clientWidth;\n\n  diff = containerXY - sliderXY;\n  if (!diff) diff = sliderXY - browserXY;\n  // diff ||= sliderXY - browserXY;\n\n  return {\n    container: browserXY - (browserXY - containerXY),\n    slider: containerXY * 2 - diff - Math.round(sliderXY / sliderChildren),\n    calculated: true,\n  };\n}\nfunction useSlider(type, sliderChildren, container, slider) {\n  const [dimensions, setDimensions] = useState({});\n\n  if (!container.current || !slider.current || dimensions.calculated) return dimensions;\n  let containerXY = 0, sliderXY = 0, browserXY = 0, diff = 0;\n\n  containerXY = type === \"vertical\" ? container.current.offsetHeight :\n    container.current.offsetWidth;\n\n  sliderXY = type === \"vertical\" ? slider.current.offsetHeight :\n    container.current.offsetWidth;\n\n  browserXY = type === \"vertical\" ? document.documentElement.clientHeight :\n    document.documentElement.clientWidth;\n\n  diff = containerXY - sliderXY;\n  if (!diff) diff = sliderXY - browserXY;\n  // diff ||= sliderXY - browserXY;\n\n  setDimensions({\n    container: browserXY - (browserXY - containerXY),\n    slider: containerXY * 2 - diff - Math.round(sliderXY / sliderChildren),\n    calculated: true,\n  });\n\n  return dimensions;\n}\n"]},"metadata":{},"sourceType":"module"}