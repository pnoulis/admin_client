{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useReducer, useContext } from \"react\";\nimport { FLASH_MESSAGE_STORE } from \"./flashMessages\";\nimport { USER_STORE } from \"./user\";\n\nconst ACTIONS = { ...FLASH_MESSAGE_STORE.ACTIONS,\n  ...USER_STORE.ACTIONS,\n  getSession: session => {\n    return {\n      type: \"GET_SESSION\",\n      session\n    };\n  },\n  forceRedraw: () => {\n    return {\n      type: \"FORCE_REDRAW\"\n    };\n  }\n},\n      REDUCER = (state, action) => {\n  switch (action.type) {\n    case \"GET_SESSION\":\n      return { ...state,\n        user: action.session,\n        initialized: true\n      };\n\n    case \"FORCE_REDRAW\":\n      return { ...state,\n        key: state.key + 1\n      };\n\n    default:\n      return { ...state,\n        flashMessages: FLASH_MESSAGE_STORE.REDUCER(state.flashMessages, action),\n        user: USER_STORE.REDUCER(state.user, action)\n      };\n  }\n},\n      APP_SCHEMA = {\n  // begins with:\n  key: 0,\n  flashMessages: [],\n  user: {\n    loggedIn: false // things that are added in the process are:\n    //shoppingCart: {},\n    //address: {},\n    //token: {},\n\n  }\n},\n      useApp = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(REDUCER, APP_SCHEMA),\n        proxy = (action, ...payload) => dispatch(ACTIONS[action](...payload));\n\n  return {\n    app: state,\n    setApp: proxy\n  };\n},\n      appContext = /*#__PURE__*/React.createContext({\n  app: {},\n  setApp: () => {}\n}),\n      useAppContext = () => {\n  _s2();\n\n  return useContext(appContext);\n},\n      APP_STORE = {\n  appContext,\n  useAppContext,\n  useApp\n};\n\n_s2(useAppContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_s(useApp, \"On7TV/715KRKR6pqcEbyKr5Ahyg=\");\n\nexport { APP_STORE };","map":{"version":3,"sources":["/home/pavlos/Office/projects/new/admin-client/src/lib/stores/app.js"],"names":["React","useReducer","useContext","FLASH_MESSAGE_STORE","USER_STORE","ACTIONS","getSession","session","type","forceRedraw","REDUCER","state","action","user","initialized","key","flashMessages","APP_SCHEMA","loggedIn","useApp","dispatch","proxy","payload","app","setApp","appContext","createContext","useAppContext","APP_STORE"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,UAA3B,QAA4C,OAA5C;AACA,SAAQC,mBAAR,QAAkC,iBAAlC;AACA,SAAQC,UAAR,QAAyB,QAAzB;;AAEA,MACAC,OAAO,GAAG,EACR,GAAGF,mBAAmB,CAACE,OADf;AAER,KAAGD,UAAU,CAACC,OAFN;AAGRC,EAAAA,UAAU,EAAGC,OAAD,IAAa;AAAC,WAAO;AAACC,MAAAA,IAAI,EAAE,aAAP;AAAsBD,MAAAA;AAAtB,KAAP;AAAuC,GAHzD;AAIRE,EAAAA,WAAW,EAAE,MAAM;AAAC,WAAO;AAACD,MAAAA,IAAI,EAAE;AAAP,KAAP;AAA+B;AAJ3C,CADV;AAAA,MAOAE,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3B,UAAQA,MAAM,CAACJ,IAAf;AACA,SAAK,aAAL;AACE,aAAO,EAAC,GAAGG,KAAJ;AAAWE,QAAAA,IAAI,EAAED,MAAM,CAACL,OAAxB;AAAiCO,QAAAA,WAAW,EAAE;AAA9C,OAAP;;AACF,SAAK,cAAL;AACE,aAAO,EAAC,GAAGH,KAAJ;AAAWI,QAAAA,GAAG,EAAEJ,KAAK,CAACI,GAAN,GAAY;AAA5B,OAAP;;AACF;AACE,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,aAAa,EAAEb,mBAAmB,CAACO,OAApB,CAA4BC,KAAK,CAACK,aAAlC,EAAiDJ,MAAjD,CAFV;AAGLC,QAAAA,IAAI,EAAET,UAAU,CAACM,OAAX,CAAmBC,KAAK,CAACE,IAAzB,EAA+BD,MAA/B;AAHD,OAAP;AANF;AAYD,CApBD;AAAA,MAqBAK,UAAU,GAAG;AACX;AACAF,EAAAA,GAAG,EAAE,CAFM;AAGXC,EAAAA,aAAa,EAAE,EAHJ;AAIXH,EAAAA,IAAI,EAAE;AACJK,IAAAA,QAAQ,EAAE,KADN,CAEJ;AACA;AACA;AACA;;AALI;AAJK,CArBb;AAAA,MAiCAC,MAAM,GAAG,MAAM;AAAA;;AACb,QACA,CAACR,KAAD,EAAQS,QAAR,IAAoBnB,UAAU,CAACS,OAAD,EAAUO,UAAV,CAD9B;AAAA,QAEAI,KAAK,GAAG,CAACT,MAAD,EAAS,GAAGU,OAAZ,KAAwBF,QAAQ,CAACf,OAAO,CAACO,MAAD,CAAP,CAAgB,GAAGU,OAAnB,CAAD,CAFxC;;AAGA,SAAO;AAACC,IAAAA,GAAG,EAAEZ,KAAN;AAAaa,IAAAA,MAAM,EAAEH;AAArB,GAAP;AACD,CAtCD;AAAA,MAuCAI,UAAU,gBAAGzB,KAAK,CAAC0B,aAAN,CAAoB;AAC/BH,EAAAA,GAAG,EAAE,EAD0B;AAE/BC,EAAAA,MAAM,EAAE,MAAM,CAAE;AAFe,CAApB,CAvCb;AAAA,MA2CAG,aAAa,GAAG;AAAA;;AAAA,SAAMzB,UAAU,CAACuB,UAAD,CAAhB;AAAA,CA3ChB;AAAA,MA4CAG,SAAS,GAAG;AACVH,EAAAA,UADU;AAEVE,EAAAA,aAFU;AAGVR,EAAAA;AAHU,CA5CZ;;IA2CAQ,a;;GAVAR,M;;AAgBA,SAAQS,SAAR","sourcesContent":["import React, {useReducer, useContext} from \"react\";\nimport {FLASH_MESSAGE_STORE} from \"./flashMessages\";\nimport {USER_STORE} from \"./user\";\n\nconst\nACTIONS = {\n  ...FLASH_MESSAGE_STORE.ACTIONS,\n  ...USER_STORE.ACTIONS,\n  getSession: (session) => {return {type: \"GET_SESSION\", session};},\n  forceRedraw: () => {return {type: \"FORCE_REDRAW\"};},\n},\nREDUCER = (state, action) => {\n  switch (action.type) {\n  case \"GET_SESSION\":\n    return {...state, user: action.session, initialized: true};\n  case \"FORCE_REDRAW\":\n    return {...state, key: state.key + 1};\n  default:\n    return {\n      ...state,\n      flashMessages: FLASH_MESSAGE_STORE.REDUCER(state.flashMessages, action),\n      user: USER_STORE.REDUCER(state.user, action)\n    };\n  }\n},\nAPP_SCHEMA = {\n  // begins with:\n  key: 0,\n  flashMessages: [],\n  user: {\n    loggedIn: false,\n    // things that are added in the process are:\n    //shoppingCart: {},\n    //address: {},\n    //token: {},\n  },\n},\nuseApp = () => {\n  const\n  [state, dispatch] = useReducer(REDUCER, APP_SCHEMA),\n  proxy = (action, ...payload) => dispatch(ACTIONS[action](...payload));\n  return {app: state, setApp: proxy};\n},\nappContext = React.createContext({\n  app: {},\n  setApp: () => {},\n}),\nuseAppContext = () => useContext(appContext),\nAPP_STORE = {\n  appContext,\n  useAppContext,\n  useApp,\n};\nexport {APP_STORE};\n"]},"metadata":{},"sourceType":"module"}