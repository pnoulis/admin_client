{"ast":null,"code":"import fetch from \"node-fetch\";\nimport AbortController from \"abort-controller\";\n\nconst FILE_FORMATS = [\"image/jpeg\", \"image/png\", \"image/gif\", \"image/webp\", \"image/svg+xml\", \"image/tiff\", \"image/bmp\"],\n      isImage = object => {\n  if (!(\"type\" in object)) return false;\n  if (FILE_FORMATS.some(format => format === object.type)) return true;\n},\n      BACKEND_HOST = \"http://localhost:4006/api\",\n      REQ_TIMEOUT = 10000; // 10 seconds\n\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  } else {\n    const error = new Error(response.statusText);\n    error.name = response.statusText;\n    error.response = response;\n    throw error;\n  }\n}\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nfunction errors(err) {\n  if (err.name === \"Not Found\") {\n    return {\n      ok: false,\n      payload: {\n        redirect: \"/404\"\n      }\n    };\n  } else {\n    return {\n      ok: false,\n      payload: {\n        redirect: \"/500\"\n      }\n    };\n  }\n}\n\nfunction constructUrl(path, params) {\n  const domain = BACKEND_HOST.concat(\"\", path),\n        url = new URL(domain);\n  if (!params) return url;\n  Object.keys(params).forEach(param => {\n    url.searchParams.append(param, params[param]);\n  });\n  return url;\n}\n\nfunction makeHeaders(isFile) {\n  if (isFile) return {\n    \"Content-Type\": \"multipart/form-data\",\n    \"Accept\": \"application/json\"\n  };else return {\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n  };\n}\n\nfunction encodeMulti(payload) {\n  let formData = new FormData();\n  Object.entries(payload).forEach(([key, val]) => {\n    if (typeof val === \"object\") {\n      if (key !== \"imgs\") {\n        val = JSON.stringify(val);\n      }\n\n      if (key === \"imgs\" && !payload.imgs.name) {\n        val = JSON.stringify(val);\n      }\n    }\n\n    formData.set(key, val);\n  });\n  return formData;\n}\n\nconst backend = {\n  get({\n    url,\n    payload,\n    params\n  }) {\n    // READ\n    const abController = new AbortController(),\n          timeout = setTimeout(() => abController.abort(), REQ_TIMEOUT);\n    url = constructUrl(url, params);\n    return fetch(url, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      signal: abController.signal,\n      credentials: \"include\"\n    }).then(checkStatus).then(parseJSON).catch(errors).finally(() => clearTimeout(timeout));\n  },\n\n  post({\n    url,\n    payload,\n    params\n  }) {\n    // CREATE\n    let file = false;\n    if (payload.img && isImage(payload.img)) file = true;\n    console.log(`is it file ${file}`);\n    const abController = new AbortController(),\n          timeout = setTimeout(() => abController.abort(), REQ_TIMEOUT);\n    url = constructUrl(url, params);\n    return fetch(url, {\n      method: \"post\",\n      body: file ? encodeMulti(payload) : JSON.stringify(payload),\n      headers: makeHeaders(file),\n      signal: abController.signal,\n      credentials: \"include\"\n    }).then(checkStatus).then(parseJSON).catch(errors).finally(() => clearTimeout(timeout));\n  },\n\n  delete({\n    url,\n    payload,\n    params\n  }) {\n    // DELETE\n    const abController = new AbortController(),\n          timeout = setTimeout(() => abController.abort(), REQ_TIMEOUT);\n    url = constructUrl(url, params);\n    return fetch(url, {\n      method: \"delete\",\n      body: JSON.stringify(payload),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      signal: abController.signal,\n      credentials: \"include\"\n    }).then(checkStatus).then(parseJSON).catch(errors).finally(() => clearTimeout(timeout));\n  },\n\n  put({\n    url,\n    payload,\n    params\n  }) {\n    // UPDATE\n    let file = false;\n    if (payload.img && isImage(payload.img)) file = true;\n    const abController = new AbortController(),\n          timeout = setTimeout(() => abController.abort(), REQ_TIMEOUT);\n    url = constructUrl(url, params);\n    return fetch(url, {\n      method: \"put\",\n      body: file ? encodeMulti(payload) : JSON.stringify(payload),\n      headers: makeHeaders(file),\n      signal: abController.signal,\n      credentials: \"include\"\n    }).then(checkStatus).then(parseJSON).catch(errors).finally(() => clearTimeout(timeout));\n  }\n\n};\nexport default backend;","map":{"version":3,"sources":["/home/pavlos/Office/projects/new/admin-client/src/lib/backend.js"],"names":["fetch","AbortController","FILE_FORMATS","isImage","object","some","format","type","BACKEND_HOST","REQ_TIMEOUT","checkStatus","response","status","error","Error","statusText","name","parseJSON","json","errors","err","ok","payload","redirect","constructUrl","path","params","domain","concat","url","URL","Object","keys","forEach","param","searchParams","append","makeHeaders","isFile","encodeMulti","formData","FormData","entries","key","val","JSON","stringify","imgs","set","backend","get","abController","timeout","setTimeout","abort","method","headers","signal","credentials","then","catch","finally","clearTimeout","post","file","img","console","log","body","delete","put"],"mappings":"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","sourcesContent":["import fetch from \"node-fetch\";\nimport AbortController from \"abort-controller\";\n\nconst\nFILE_FORMATS = [\n  \"image/jpeg\",\n  \"image/png\",\n  \"image/gif\",\n  \"image/webp\",\n  \"image/svg+xml\",\n  \"image/tiff\",\n  \"image/bmp\",\n],\nisImage = (object) => {\n  if (!(\"type\" in object)) return false;\n  if (FILE_FORMATS.some(format => format === object.type)) return true;\n},\nBACKEND_HOST = \"http://localhost:4006/api\",\nREQ_TIMEOUT = 10000; // 10 seconds\n\nfunction checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n    return response;\n  } else {\n    const error = new Error(response.statusText);\n    error.name = response.statusText;\n    error.response = response;\n    throw error;\n  }\n}\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nfunction errors(err)  {\n  if (err.name === \"Not Found\") {\n    return {ok: false, payload: {redirect: \"/404\"}};\n  } else {\n    return {ok: false, payload: {redirect: \"/500\"}};\n  }\n}\n\nfunction constructUrl(path, params) {\n  const domain = BACKEND_HOST.concat(\"\", path),\n        url = new URL(domain);\n\n  if (!params) return url;\n  Object.keys(params).forEach(param => {\n    url.searchParams.append(param, params[param]);\n  });\n  return url;\n}\n\nfunction makeHeaders(isFile) {\n  if (isFile) return {\n    \"Content-Type\": \"multipart/form-data\",\n    \"Accept\": \"application/json\",\n  }; else return {\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\",\n  };\n}\n\nfunction encodeMulti(payload) {\n  let formData = new FormData();\n  Object.entries(payload).forEach(([key, val]) => {\n    if (typeof val === \"object\") {\n      if (key !== \"imgs\") {\n        val = JSON.stringify(val);\n      }\n      if (key === \"imgs\" && !payload.imgs.name) {\n        val = JSON.stringify(val);\n      }\n    }\n    formData.set(key, val);\n  });\n  return formData;\n}\n\nconst backend = {\n  get({url, payload, params}) { // READ\n    const abController = new AbortController(),\n          timeout = setTimeout(\n            () => abController.abort(),\n            REQ_TIMEOUT);\n\n    url = constructUrl(url, params);\n    return fetch(url, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n      },\n      signal: abController.signal,\n      credentials: \"include\",\n    }).then(checkStatus)\n      .then(parseJSON)\n      .catch(errors)\n      .finally(() => clearTimeout(timeout));\n  },\n  post({url, payload, params}) { // CREATE\n    let file = false;\n    if (payload.img && isImage(payload.img)) file = true;\n    console.log(`is it file ${file}`);\n    const abController = new AbortController(),\n          timeout = setTimeout(\n            () => abController.abort(),\n            REQ_TIMEOUT);\n\n    url = constructUrl(url, params);\n    return fetch(url, {\n      method: \"post\",\n      body: file ? encodeMulti(payload) : JSON.stringify(payload),\n      headers: makeHeaders(file),\n      signal: abController.signal,\n      credentials: \"include\",\n    }).then(checkStatus)\n      .then(parseJSON)\n      .catch(errors)\n      .finally(() => clearTimeout(timeout));\n  },\n  delete({url, payload, params}) { // DELETE\n    const abController = new AbortController(),\n          timeout = setTimeout(\n            () => abController.abort(),\n            REQ_TIMEOUT);\n\n    url = constructUrl(url, params);\n    return fetch(url, {\n      method: \"delete\",\n      body: JSON.stringify(payload),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n      },\n      signal: abController.signal,\n      credentials: \"include\",\n    }).then(checkStatus)\n      .then(parseJSON)\n      .catch(errors)\n      .finally(() => clearTimeout(timeout));\n  },\n  put({url, payload, params}) { // UPDATE\n    let file = false;\n    if (payload.img && isImage(payload.img)) file = true;\n    const abController = new AbortController(),\n          timeout = setTimeout(\n            () => abController.abort(),\n            REQ_TIMEOUT);\n\n    url = constructUrl(url, params);\n    return fetch(url, {\n      method: \"put\",\n      body: file ? encodeMulti(payload) : JSON.stringify(payload),\n      headers: makeHeaders(file),\n      signal: abController.signal,\n      credentials: \"include\",\n    }).then(checkStatus)\n      .then(parseJSON)\n      .catch(errors)\n      .finally(() => clearTimeout(timeout));\n  }\n};\n\nexport default backend;\n\n\n"]},"metadata":{},"sourceType":"module"}