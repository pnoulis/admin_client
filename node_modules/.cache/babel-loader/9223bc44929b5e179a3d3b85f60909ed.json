{"ast":null,"code":"var _jsxFileName = \"/home/pavlos/Office/projects/new/admin-client/src/components/Tables/FormRow.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { FORM_STORE } from \"lib/stores\";\nimport { FORM_UTILS } from \"lib/utils\";\nimport { useTableContext, Row, Cell, renderErrors } from \"./Table\";\nimport { NotBeingEdited, BeingEdited } from \"components/Fields\";\nimport toggleStyle from \"./toggles.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useForm,\n  formContext\n} = FORM_STORE;\nconst {\n  ifErrors\n} = FORM_UTILS;\nexport default function FormRow({\n  data\n}) {\n  _s();\n\n  const {\n    cellMap,\n    formSchema\n  } = useTableContext(),\n        {\n    form,\n    setForm\n  } = useForm({ ...formSchema,\n    fields: { ...formSchema.fields,\n      ...data\n    },\n    new: !data,\n    toggled: !data && \"edit\",\n    edit: !data && true\n  });\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: Object.keys(cellMap).map((h, i) => /*#__PURE__*/_jsxDEV(Cell, {\n      children: h\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 43\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this); // return (\n  //   <formContext.Provider value={{...form, setForm}}>\n  //     <Row>\n  //       {Object.keys(cellMap).map((h, i) => {\n  //         return (\n  //           <Cell key={i}>\n  //           {typeof cellMap[h] === \"function\" ?\n  //            cellMap[h]() :\n  //            cellMap[h]}\n  //           </Cell >\n  //         );\n  //       })}\n  //       <Cell key={Object.keys(form.fields).length}>\n  //         {form.edit ? <BeingEdited style={toggleStyle}/> :\n  //          <NotBeingEdited style={toggleStyle}/>}\n  //       </Cell>\n  //     </Row>\n  //     {renderErrors(ifErrors(form.fieldErrors))}\n  //   </formContext.Provider>\n  // );\n}\n\n_s(FormRow, \"a5V5PM/rcGB7x7nZ7xzK6Glusps=\", false, function () {\n  return [useTableContext, useForm];\n});\n\n_c = FormRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormRow\");","map":{"version":3,"sources":["/home/pavlos/Office/projects/new/admin-client/src/components/Tables/FormRow.jsx"],"names":["useEffect","FORM_STORE","FORM_UTILS","useTableContext","Row","Cell","renderErrors","NotBeingEdited","BeingEdited","toggleStyle","useForm","formContext","ifErrors","FormRow","data","cellMap","formSchema","form","setForm","fields","new","toggled","edit","Object","keys","map","h","i"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AACA,SAAQC,UAAR,QAAyB,WAAzB;AACA,SAAQC,eAAR,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,YAApC,QAAuD,SAAvD;AACA,SAAQC,cAAR,EAAwBC,WAAxB,QAA0C,mBAA1C;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AACA,MAAM;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,IAAyBV,UAA/B;AACA,MAAM;AAACW,EAAAA;AAAD,IAAaV,UAAnB;AAGA,eAAe,SAASW,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAAyB;AAAA;;AACtC,QACA;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAwBb,eAAe,EADvC;AAAA,QAEA;AAACc,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBR,OAAO,CACvB,EAAC,GAAGM,UAAJ;AAAgBG,IAAAA,MAAM,EAAE,EAAC,GAAGH,UAAU,CAACG,MAAf;AAAuB,SAAGL;AAA1B,KAAxB;AACCM,IAAAA,GAAG,EAAE,CAACN,IADP;AACaO,IAAAA,OAAO,EAAE,CAACP,IAAD,IAAS,MAD/B;AACuCQ,IAAAA,IAAI,EAAE,CAACR,IAAD,IAAS;AADtD,GADuB,CAFzB;AAOA,sBACE,QAAC,GAAD;AAAA,cACGS,MAAM,CAACC,IAAP,CAAYT,OAAZ,EAAqBU,GAArB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,kBAAU,QAAC,IAAD;AAAA,gBAAeD;AAAf,OAAWC,CAAX;AAAA;AAAA;AAAA;AAAA,YAAnC;AADH;AAAA;AAAA;AAAA;AAAA,UADF,CARsC,CAatC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;GAjCuBd,O;UAEEV,e,EACNO,O;;;KAHIG,O","sourcesContent":["import {useEffect} from \"react\";\nimport {FORM_STORE} from \"lib/stores\";\nimport {FORM_UTILS} from \"lib/utils\";\nimport {useTableContext, Row, Cell, renderErrors} from \"./Table\";\nimport {NotBeingEdited, BeingEdited} from \"components/Fields\";\nimport toggleStyle from \"./toggles.module.scss\";\nconst {useForm, formContext} = FORM_STORE;\nconst {ifErrors} = FORM_UTILS;\n\n\nexport default function FormRow({data}) {\n  const\n  {cellMap, formSchema} = useTableContext(),\n  {form, setForm} = useForm(\n    {...formSchema, fields: {...formSchema.fields, ...data},\n     new: !data, toggled: !data && \"edit\", edit: !data && true}\n  );\n\n  return (\n    <Row>\n      {Object.keys(cellMap).map((h, i) => <Cell key={i}>{h}</Cell>)}\n    </Row>\n  );\n  // return (\n  //   <formContext.Provider value={{...form, setForm}}>\n  //     <Row>\n  //       {Object.keys(cellMap).map((h, i) => {\n  //         return (\n  //           <Cell key={i}>\n  //           {typeof cellMap[h] === \"function\" ?\n  //            cellMap[h]() :\n  //            cellMap[h]}\n  //           </Cell >\n  //         );\n  //       })}\n  //       <Cell key={Object.keys(form.fields).length}>\n  //         {form.edit ? <BeingEdited style={toggleStyle}/> :\n  //          <NotBeingEdited style={toggleStyle}/>}\n  //       </Cell>\n  //     </Row>\n  //     {renderErrors(ifErrors(form.fieldErrors))}\n  //   </formContext.Provider>\n  // );\n}\n"]},"metadata":{},"sourceType":"module"}