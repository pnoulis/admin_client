{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useReducer, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst ACTIONS = {\n  setSelection: selection => {\n    return {\n      type: \"SET_SELECTION\",\n      selection\n    };\n  },\n  setTable: table => {\n    return {\n      type: \"SET_TABLE\",\n      table\n    };\n  }\n},\n      REDUCER = (state, action) => {\n  switch (action.type) {\n    case \"SET_SELECTION\":\n      return { ...state,\n        selection: action.selection\n      };\n\n    case \"SET_TABLE\":\n      return { ...state,\n        [state.selection]: { ...state[state.selection],\n          table: action.table\n        }\n      };\n\n    default:\n      return state;\n  }\n},\n      usePanel = initialState => {\n  _s();\n\n  const [state, dispatch] = useReducer(REDUCER, initialState),\n        proxy = (action, ...payload) => dispatch(ACTIONS[action](...payload));\n\n  return {\n    panel: state,\n    setPanel: proxy\n  };\n},\n      panelContext = /*#__PURE__*/React.createContext({\n  panel: {},\n  setPanel: () => {}\n}),\n      usePanelContext = () => {\n  _s2();\n\n  return useContext(panelContext);\n},\n      PANEL_STORE = {\n  panelContext,\n  usePanelContext,\n  usePanel\n};\n\n_s2(usePanelContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_s(usePanel, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\nexport { PANEL_STORE };","map":{"version":3,"sources":["/home/pavlos/Office/projects/new/admin-client/src/lib/stores/panels.js"],"names":["React","useReducer","useContext","ReactDOM","ACTIONS","setSelection","selection","type","setTable","table","REDUCER","state","action","usePanel","initialState","dispatch","proxy","payload","panel","setPanel","panelContext","createContext","usePanelContext","PANEL_STORE"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,UAA3B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB;;AACA,MACAC,OAAO,GAAG;AACRC,EAAAA,YAAY,EAAGC,SAAD,IAAe;AAAC,WAAO;AAACC,MAAAA,IAAI,EAAE,eAAP;AAAwBD,MAAAA;AAAxB,KAAP;AAA2C,GADjE;AAERE,EAAAA,QAAQ,EAAGC,KAAD,IAAW;AAAC,WAAO;AAACF,MAAAA,IAAI,EAAE,WAAP;AAAoBE,MAAAA;AAApB,KAAP;AAAmC;AAFjD,CADV;AAAA,MAKAC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3B,UAAQA,MAAM,CAACL,IAAf;AACA,SAAK,eAAL;AACE,aAAO,EAAC,GAAGI,KAAJ;AAAWL,QAAAA,SAAS,EAAEM,MAAM,CAACN;AAA7B,OAAP;;AACF,SAAK,WAAL;AACE,aAAO,EAAC,GAAGK,KAAJ;AAAW,SAACA,KAAK,CAACL,SAAP,GAAmB,EAAC,GAAGK,KAAK,CAACA,KAAK,CAACL,SAAP,CAAT;AAA4BG,UAAAA,KAAK,EAAEG,MAAM,CAACH;AAA1C;AAA9B,OAAP;;AACF;AACE,aAAOE,KAAP;AANF;AAQD,CAdD;AAAA,MAeAE,QAAQ,GAAIC,YAAD,IAAkB;AAAA;;AAC3B,QACA,CAACH,KAAD,EAAQI,QAAR,IAAoBd,UAAU,CAACS,OAAD,EAAUI,YAAV,CAD9B;AAAA,QAEAE,KAAK,GAAG,CAACJ,MAAD,EAAS,GAAGK,OAAZ,KAAwBF,QAAQ,CAACX,OAAO,CAACQ,MAAD,CAAP,CAAgB,GAAGK,OAAnB,CAAD,CAFxC;;AAIA,SAAO;AAACC,IAAAA,KAAK,EAAEP,KAAR;AAAeQ,IAAAA,QAAQ,EAAEH;AAAzB,GAAP;AACD,CArBD;AAAA,MAsBAI,YAAY,gBAAGpB,KAAK,CAACqB,aAAN,CAAoB;AACjCH,EAAAA,KAAK,EAAE,EAD0B;AAEjCC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAFe,CAApB,CAtBf;AAAA,MA0BAG,eAAe,GAAG;AAAA;;AAAA,SAAMpB,UAAU,CAACkB,YAAD,CAAhB;AAAA,CA1BlB;AAAA,MA2BAG,WAAW,GAAG;AACZH,EAAAA,YADY;AAEZE,EAAAA,eAFY;AAGZT,EAAAA;AAHY,CA3Bd;;IA0BAS,e;;GAXAT,Q;;AAiBA,SAAQU,WAAR","sourcesContent":["import React, {useReducer, useContext} from \"react\";\nimport ReactDOM from \"react-dom\";\nconst\nACTIONS = {\n  setSelection: (selection) => {return {type: \"SET_SELECTION\", selection};},\n  setTable: (table) => {return {type: \"SET_TABLE\", table};},\n},\nREDUCER = (state, action) => {\n  switch (action.type) {\n  case \"SET_SELECTION\":\n    return {...state, selection: action.selection};\n  case \"SET_TABLE\":\n    return {...state, [state.selection]: {...state[state.selection], table: action.table}};\n  default:\n    return state;\n  }\n},\nusePanel = (initialState) => {\n  const\n  [state, dispatch] = useReducer(REDUCER, initialState),\n  proxy = (action, ...payload) => dispatch(ACTIONS[action](...payload));\n\n  return {panel: state, setPanel: proxy};\n},\npanelContext = React.createContext({\n  panel: {},\n  setPanel: () => {},\n}),\nusePanelContext = () => useContext(panelContext),\nPANEL_STORE = {\n  panelContext,\n  usePanelContext,\n  usePanel\n};\nexport {PANEL_STORE};\n\n"]},"metadata":{},"sourceType":"module"}