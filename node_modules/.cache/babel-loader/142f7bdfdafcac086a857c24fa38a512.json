{"ast":null,"code":"var _jsxFileName = \"/home/pavlos/Office/projects/new/admin-client/src/components/Slider/Hide.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S = {};\nS.Toggle = styled.div`\ndisplay: flex;\nflex: ${props => props.toggled ? 0 : 1};\ncolor: ${props => props.toggled ? \"transparent\" : \"initial\"};\nwidth: ${props => {\n  if (props.toggled) return \"0px\";\n  return props.dimensions.width + \"px\";\n}};\ntransition: transform 2s, width 2s, flex 2s;\nposition: relative;\n\n\n& > * {\ncolor: transparent !important;\n}\n::before{\ncontent: \"\";\nbackground-image: url(\"right-arrow-angle.png\");\nbackground-size: cover;\nbackground-repeat: no-repeat;\n\nbox-sizing: content-box;\npadding: 10px 10px;\nwidth: 30px;\nheight: 30px;\ncursor: pointer;\n\nposition: absolute;\ntop: 50%;\nright: ${props => props.toggled ? \"-43px\" : \"-50px\"};\ntransform: ${props => props.toggled ? \"rotate() translate(0, 12%)\" : \"rotate(-180deg) translate(0, 0%)\"};\ntransition: transform 2s, right 2s;\n}\n`;\nexport function Hide({\n  children\n}) {\n  _s();\n\n  const [toggle, setToggle] = useState(false),\n        [dimensions, setDimensions] = useState({}),\n        ref = useRef(null);\n  useEffect(() => {\n    const child = ref.current.firstElementChild;\n    setDimensions({\n      width: child.offsetWidth\n    });\n  }, []);\n\n  function handleToggle(e) {\n    if (e.target !== ref.current) return;\n    setToggle(!toggle);\n  }\n\n  return /*#__PURE__*/_jsxDEV(S.Toggle, {\n    ref: ref,\n    dimensions: dimensions,\n    toggled: toggle,\n    onClick: handleToggle,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Hide, \"UbA7dsNK3nwJGBsMTbi1eCUnBww=\");\n\n_c = Hide;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hide\");","map":{"version":3,"sources":["/home/pavlos/Office/projects/new/admin-client/src/components/Slider/Hide.jsx"],"names":["useRef","useState","useEffect","styled","S","Toggle","div","props","toggled","dimensions","width","Hide","children","toggle","setToggle","setDimensions","ref","child","current","firstElementChild","offsetWidth","handleToggle","e","target"],"mappings":";;;AAAA,SAAQA,MAAR,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,CAAC,GAAG,EAAV;AACAA,CAAC,CAACC,MAAF,GAAWF,MAAM,CAACG,GAAI;AACtB;AACA,QAAQC,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,CAAhB,GAAoB,CAAE;AACvC,SAASD,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,aAAhB,GAAgC,SAAU;AAC5D,SAASD,KAAK,IAAI;AAClB,MAAIA,KAAK,CAACC,OAAV,EAAmB,OAAO,KAAP;AACnB,SAAOD,KAAK,CAACE,UAAN,CAAiBC,KAAjB,GAAyB,IAAhC;AACC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASH,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,OAAhB,GAA0B,OAAQ;AACpD,aAAaD,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,4BAAhB,GAA+C,kCAAmC;AACxG;AACA;AACA,CAjCA;AAmCA,OAAO,SAASG,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAA0B;AAAA;;AAC/B,QACA,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAD9B;AAAA,QAEA,CAACQ,UAAD,EAAaM,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAFtC;AAAA,QAGAe,GAAG,GAAGhB,MAAM,CAAC,IAAD,CAHZ;AAKAE,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,KAAK,GAAGD,GAAG,CAACE,OAAJ,CAAYC,iBAA1B;AACAJ,IAAAA,aAAa,CAAC;AAACL,MAAAA,KAAK,EAAEO,KAAK,CAACG;AAAd,KAAD,CAAb;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,QAAIA,CAAC,CAACC,MAAF,KAAaP,GAAG,CAACE,OAArB,EAA8B;AAC9BJ,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD;;AAED,sBACE,QAAC,CAAD,CAAG,MAAH;AAAU,IAAA,GAAG,EAAEG,GAAf;AAAoB,IAAA,UAAU,EAAEP,UAAhC;AAA4C,IAAA,OAAO,EAAEI,MAArD;AAA6D,IAAA,OAAO,EAAEQ,YAAtE;AAAA,cACGT;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GArBeD,I;;KAAAA,I","sourcesContent":["import {useRef, useState, useEffect} from \"react\";\nimport styled from \"styled-components\";\n\nconst S = {};\nS.Toggle = styled.div`\ndisplay: flex;\nflex: ${props => props.toggled ? 0 : 1};\ncolor: ${props => props.toggled ? \"transparent\" : \"initial\"};\nwidth: ${props => {\nif (props.toggled) return \"0px\";\nreturn props.dimensions.width + \"px\";\n}};\ntransition: transform 2s, width 2s, flex 2s;\nposition: relative;\n\n\n& > * {\ncolor: transparent !important;\n}\n::before{\ncontent: \"\";\nbackground-image: url(\"right-arrow-angle.png\");\nbackground-size: cover;\nbackground-repeat: no-repeat;\n\nbox-sizing: content-box;\npadding: 10px 10px;\nwidth: 30px;\nheight: 30px;\ncursor: pointer;\n\nposition: absolute;\ntop: 50%;\nright: ${props => props.toggled ? \"-43px\" : \"-50px\"};\ntransform: ${props => props.toggled ? \"rotate() translate(0, 12%)\" : \"rotate(-180deg) translate(0, 0%)\"};\ntransition: transform 2s, right 2s;\n}\n`;\n\nexport function Hide({children}) {\n  const\n  [toggle, setToggle] = useState(false),\n  [dimensions, setDimensions] = useState({}),\n  ref = useRef(null);\n\n  useEffect(() => {\n    const child = ref.current.firstElementChild;\n    setDimensions({width: child.offsetWidth});\n  }, []);\n\n  function handleToggle(e) {\n    if (e.target !== ref.current) return;\n    setToggle(!toggle);\n  }\n\n  return (\n    <S.Toggle ref={ref} dimensions={dimensions} toggled={toggle} onClick={handleToggle}>\n      {children}\n    </S.Toggle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}