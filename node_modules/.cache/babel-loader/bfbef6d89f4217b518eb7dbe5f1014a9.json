{"ast":null,"code":"var _jsxFileName = \"/home/pavlos/Office/projects/new/admin-client/src/components/Tables/FormRow.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { PANEL_STORE, FORM_STORE } from \"lib/stores\";\nimport { FORM_UTILS } from \"lib/utils\";\nimport { useTableContext, Row, Cell, renderErrors } from \"./Table\";\nimport { NotBeingEdited, BeingEdited } from \"components/Fields\";\nimport toggleStyle from \"./styles/toggles.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  usePanelContext\n} = PANEL_STORE;\nconst {\n  useForm,\n  formContext\n} = FORM_STORE;\nconst {\n  ifErrors\n} = FORM_UTILS;\n\nfunction FormRow({\n  data\n}) {\n  _s();\n\n  const {\n    panel,\n    setPanel\n  } = usePanelContext(),\n        {\n    cellMap,\n    formSchema\n  } = useTableContext(),\n        {\n    form,\n    setForm\n  } = useForm({ ...formSchema,\n    fields: { ...formSchema.fields,\n      ...data\n    },\n    new: !data,\n    toggled: !data && \"edit\",\n    edit: !data && true\n  });\n  console.log(form);\n  return /*#__PURE__*/_jsxDEV(formContext.Provider, {\n    value: { ...form,\n      setForm\n    },\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [Object.keys(cellMap).map((h, i) => {\n        return /*#__PURE__*/_jsxDEV(Cell, {\n          children: typeof cellMap[h] === \"function\" ? cellMap[h]() : cellMap[h]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Cell, {\n        children: form.edit ? /*#__PURE__*/_jsxDEV(BeingEdited, {\n          style: toggleStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(NotBeingEdited, {\n          style: toggleStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 12\n        }, this)\n      }, Object.keys(form.fields).length, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), renderErrors(ifErrors(form.fieldErrors))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormRow, \"cf3eVrShkNGWKvyZpaQ29jf3BJE=\", false, function () {\n  return [usePanelContext, useTableContext, useForm];\n});\n\n_c = FormRow;\nexport default FormRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormRow\");","map":{"version":3,"sources":["/home/pavlos/Office/projects/new/admin-client/src/components/Tables/FormRow.jsx"],"names":["useEffect","PANEL_STORE","FORM_STORE","FORM_UTILS","useTableContext","Row","Cell","renderErrors","NotBeingEdited","BeingEdited","toggleStyle","usePanelContext","useForm","formContext","ifErrors","FormRow","data","panel","setPanel","cellMap","formSchema","form","setForm","fields","new","toggled","edit","console","log","Object","keys","map","h","i","length","fieldErrors"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,WAAR,EAAqBC,UAArB,QAAsC,YAAtC;AACA,SAAQC,UAAR,QAAyB,WAAzB;AACA,SAAQC,eAAR,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,YAApC,QAAuD,SAAvD;AACA,SAAQC,cAAR,EAAwBC,WAAxB,QAA0C,mBAA1C;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAoBV,WAA1B;AACA,MAAM;AAACW,EAAAA,OAAD;AAAUC,EAAAA;AAAV,IAAyBX,UAA/B;AACA,MAAM;AAACY,EAAAA;AAAD,IAAaX,UAAnB;;AAGA,SAASY,OAAT,CAAiB;AAACC,EAAAA;AAAD,CAAjB,EAAyB;AAAA;;AACvB,QACA;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBP,eAAe,EADnC;AAAA,QAEA;AAACQ,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAwBhB,eAAe,EAFvC;AAAA,QAGA;AAACiB,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBV,OAAO,CACvB,EAAC,GAAGQ,UAAJ;AAAgBG,IAAAA,MAAM,EAAE,EAAC,GAAGH,UAAU,CAACG,MAAf;AAAuB,SAAGP;AAA1B,KAAxB;AACCQ,IAAAA,GAAG,EAAE,CAACR,IADP;AACaS,IAAAA,OAAO,EAAE,CAACT,IAAD,IAAS,MAD/B;AACuCU,IAAAA,IAAI,EAAE,CAACV,IAAD,IAAS;AADtD,GADuB,CAHzB;AAQAW,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,EAAC,GAAGA,IAAJ;AAAUC,MAAAA;AAAV,KAA7B;AAAA,4BACE,QAAC,GAAD;AAAA,iBACGO,MAAM,CAACC,IAAP,CAAYX,OAAZ,EAAqBY,GAArB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClC,4BACE,QAAC,IAAD;AAAA,oBACC,OAAOd,OAAO,CAACa,CAAD,CAAd,KAAsB,UAAtB,GACAb,OAAO,CAACa,CAAD,CAAP,EADA,GAEAb,OAAO,CAACa,CAAD;AAHR,WAAWC,CAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OARA,CADH,eAUE,QAAC,IAAD;AAAA,kBACGZ,IAAI,CAACK,IAAL,gBAAY,QAAC,WAAD;AAAa,UAAA,KAAK,EAAEhB;AAApB;AAAA;AAAA;AAAA;AAAA,gBAAZ,gBACA,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA;AAFH,SAAWmB,MAAM,CAACC,IAAP,CAAYT,IAAI,CAACE,MAAjB,EAAyBW,MAApC;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAgBG3B,YAAY,CAACO,QAAQ,CAACO,IAAI,CAACc,WAAN,CAAT,CAhBf;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA9BQpB,O;UAEaJ,e,EACIP,e,EACNQ,O;;;KAJXG,O;AAgCT,eAAeA,OAAf","sourcesContent":["import {useEffect} from \"react\";\nimport {PANEL_STORE, FORM_STORE} from \"lib/stores\";\nimport {FORM_UTILS} from \"lib/utils\";\nimport {useTableContext, Row, Cell, renderErrors} from \"./Table\";\nimport {NotBeingEdited, BeingEdited} from \"components/Fields\";\nimport toggleStyle from \"./styles/toggles.module.scss\";\nconst {usePanelContext} = PANEL_STORE;\nconst {useForm, formContext} = FORM_STORE;\nconst {ifErrors} = FORM_UTILS;\n\n\nfunction FormRow({data}) {\n  const\n  {panel, setPanel} = usePanelContext(),\n  {cellMap, formSchema} = useTableContext(),\n  {form, setForm} = useForm(\n    {...formSchema, fields: {...formSchema.fields, ...data},\n     new: !data, toggled: !data && \"edit\", edit: !data && true}\n  );\n\n  console.log(form);\n  return (\n    <formContext.Provider value={{...form, setForm}}>\n      <Row>\n        {Object.keys(cellMap).map((h, i) => {\n          return (\n            <Cell key={i}>\n            {typeof cellMap[h] === \"function\" ?\n             cellMap[h]() :\n             cellMap[h]}\n            </Cell >\n          );\n        })}\n        <Cell key={Object.keys(form.fields).length}>\n          {form.edit ? <BeingEdited style={toggleStyle}/> :\n           <NotBeingEdited style={toggleStyle}/>}\n        </Cell>\n      </Row>\n      {renderErrors(ifErrors(form.fieldErrors))}\n    </formContext.Provider>\n  );\n}\n\nexport default FormRow;\n"]},"metadata":{},"sourceType":"module"}